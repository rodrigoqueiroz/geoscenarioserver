[workspace]
authors = [ "See CONTRIBUTORS" ]
channels = [
  "https://prefix.dev/robostack-humble",
  "https://prefix.dev/conda-forge"
]
name = "geoscenarioserver"
platforms = ["linux-64"] #, "win-64", "osx-64", "osx-arm64", "linux-aarch64"]
version = "0.1.0"
preview = ["pixi-build"]

[tasks]
gss = "gsserver"
test_scenarios_ci = "bash scripts/run_scenarios.bash --no-dash --non-interactive"
test_scenario = "bash scripts/run_scenarios.bash --no-dash --single"
build_wheel = "python -m build"

[dependencies]
jq = "*"                              # used by run_scenarios.bash
geoscenarioserver = { path = "." }

[pypi-dependencies]
antlr-denter = "*"
py-trees = "==0.7.6"

[target.linux.dependencies]
tk = { build = "xft*" }  # to have true type fonts on linux

[package]
name = { workspace = true }
version = "0.1.0"

[package.build.backend]
channels = [
  "https://prefix.dev/pixi-build-backends",
  "https://prefix.dev/conda-forge",
]
name = "pixi-build-python"
version = ">=0.4.1"

[package.host-dependencies] 
hatchling = "*"

[package.run-dependencies]
python = ">=3.11"
tk = "*"
antlr4-python3-runtime = ">=4.13"
graphviz = "*"
matplotlib = "*"
numpy = "*"
scipy = "*"
requests = "*"
pynput = "*"
screeninfo = "*"
pydot = "*"
ros-humble-lanelet2 = "*"

[package.target.unix.run-dependencies]
sysv_ipc = "*"
xorg-libxft = "*"

[package.target.linux.run-dependencies]
libgl-devel = "*"
qt6-wayland = "*"
#tk = { build = "xft*" }  # we want this instead of in [target.linux.dependencies] but pixi has a bug and it's not found

[environments]
default = { solve-group = "common" }
humble = { features = ["humble"], solve-group = "common" }
antlr = { features = ["antlr"], no-default-feature = true }

[feature.humble]
channels = [
  "https://prefix.dev/robostack-humble",
  "https://prefix.dev/conda-forge"
]

[feature.humble.dependencies]
python = ">=3.11"
compilers = "*"
cmake = "*"
pkg-config = "*"
make = "*"
ninja = "*"
catkin_tools = "*"
rosdep = "*"
colcon-common-extensions = "*"
deepdiff = "*"
ros-humble-ros-core = "*"
ros-humble-desktop = "*"
ros-humble-geographic-msgs = "*"

[feature.humble.target.unix.activation]
scripts = ["colcon_ws/install/setup.bash"]

[feature.humble.tasks]
ros_gss = "gsserver"
ros_client_build = { cmd = "bash scripts/pixi_build_ros2_client.bash --symlink-install", outputs = ["colcon_ws/install/setup.bash"] }
ros_client_build_release = { cmd = "bash scripts/pixi_build_ros2_client.bash", outputs = ["colcon_ws/install/setup.bash"] }
ros_client = { cmd = "ros2 run geoscenario_client geoscenario_client", depends-on = ["ros_client_build_release"] }
ros_client_wgs84 = { cmd = "ros2 run geoscenario_client geoscenario_client --ros-args -p wgs84:=true", depends-on = ["ros_client_build_release"] }
ros_client_wgs84_roundtriptest = { cmd = "ros2 run geoscenario_client geoscenario_client --ros-args -p wgs84:=true -p roundtriptest:=true", depends-on = ["ros_client_build_release"] }
ros_mock_co_simulator = { cmd = "ros2 run geoscenario_client mock_co_simulator", depends-on = ["ros_client_build_release"] }
rqt = { cmd = "rqt", depends-on = ["ros_client_build_release"] }
rqt_topic = { cmd = "rqt -s rqt_topic.topic.Topic", depends-on = ["ros_client_build_release"] }

[feature.antlr.dependencies]
antlr4-tools = "*"

[feature.antlr.tasks]
regenerate = "antlr4 -Dlanguage=Python3 geoscenarioserver/sv/planners/btree/parser/BTreeDSL.g4; antlr4 -Dlanguage=Python3 geoscenarioserver/sp/btree/parser/BTreeDSL.g4"
