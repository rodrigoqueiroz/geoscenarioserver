[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "geoscenarioserver"
version = "0.1.0"
description = "Traffic scenario simulation framework for GeoScenario2"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE", "CONTRIBUTORS"]
authors = [
    {name = "Rodrigo Queiroz"},
    {name = "Divit Sharma"},
    {name = "Ricardo Caldas"},
    {name = "Michał Antkiewicz"},
    {name = "Scott Larter"},
    {name = "Michael Sawyer"},
    {name = "Ian Colwell"},
    {name = "Alex Eliasmith"},
    {name = "Frédéric Bouchard"},
    {name = "Charlie Zheng"},
    {name = "Shourrya Guha"},
]
maintainers = [
    {name = "Rodrigo Queiroz", email = "rqueiroz@uwaterloo.ca"},
    {name = "Michał Antkiewicz", email = "michal.antkiewicz@uwaterloo.ca"},
]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Testing",
]
keywords = [
    "automated-vehicles",
    "simulation",
    "behavior-trees",
    "motion-planning",
    "frenet-frame",
    "scenario-testing",
    "lanelet2",
]

dependencies = [
    "antlr4-python3-runtime>=4.13",
    "antlr-denter",
    "lanelet2",
    "matplotlib",
    "numpy",
    "scipy",
    "py_trees==0.7.6",
    "sysv-ipc",
    "pydot",
    "requests",
    "pynput",
    "screeninfo",
]

[project.optional-dependencies]
dev = [
    "antlr4-tools",
]
ros2 = [
    "deepdiff",
]
test = [
    "pytest>=7.0",
    "pytest-cov",
]

[project.urls]
Homepage = "https://github.com/rodrigoqueiroz/geoscenarioserver"
Documentation = "https://geoscenario2.readthedocs.io"
Repository = "https://github.com/rodrigoqueiroz/geoscenarioserver"
Issues = "https://github.com/rodrigoqueiroz/geoscenarioserver/issues"

[project.scripts]
gsserver = "geoscenarioserver.GSServer:main"

[tool.setuptools]
packages = [
    "geoscenarioserver",
    "geoscenarioserver.dash",
    "geoscenarioserver.gsc",
    "geoscenarioserver.mapping",
    "geoscenarioserver.requirements",
    "geoscenarioserver.shm",
    "geoscenarioserver.sp",
    "geoscenarioserver.sp.btree",
    "geoscenarioserver.sp.btree.parser",
    "geoscenarioserver.sv",
    "geoscenarioserver.sv.maneuvers",
    "geoscenarioserver.sv.planners",
    "geoscenarioserver.sv.planners.btree",
    "geoscenarioserver.sv.planners.btree.parser",
    "geoscenarioserver.sv.planners.ruleEngine",
    "geoscenarioserver.sv.planners.ruleEngine.extractors",
    "geoscenarioserver.util",
]
include-package-data = true

[tool.setuptools.package-data]
"geoscenarioserver" = ["*.btree", "*.g4", "*.osm", "*.xsd", "*.xml", "*.css"]
"geoscenarioserver.dash" = ["*.png"]
"geoscenarioserver.sp.btree.parser" = ["*.g4"]
"geoscenarioserver.sv.planners.btree.parser" = ["*.g4"]

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py"]
addopts = [
    "--verbose",
    "--strict-markers",
]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
  | outputs
  | colcon_ws
  | \.pixi
)/
'''

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true
extend_skip_glob = ["outputs/*", "colcon_ws/*", ".pixi/*"]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "C0103",  # Invalid name (lots of single-char variables in math code)
    "C0114",  # Missing module docstring
    "R0913",  # Too many arguments (common in simulation code)
    "R0914",  # Too many local variables
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = [
    "outputs/",
    "colcon_ws/",
    ".pixi/",
    "__pycache__/",
]
